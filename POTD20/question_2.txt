class Solution {
public:
    // function to calculate days
    int func(vector<int>&arr,int mid)
    {
        int n=arr.size();
        int day=1;
        int load=0;
        for(int i=0;i<n;i++)
        {
            if(load+arr[i]>mid)  
            {
                day++;
                load=arr[i];
            }
            else
            load+=arr[i];
        }
        return day;
    }
    int shipWithinDays(vector<int>& weights, int days) {
        int n=weights.size();

        // search space
        int low=*max_element(weights.begin(),weights.end());
        int high=accumulate(weights.begin(),weights.end(),0);

        while(low<=high)
        {
            int mid=(low+high)/2;
            int totaldays=func(weights,mid);  // functon to calculate the days

            // if the total days are less than normal days that mean we are considering higher number so
            // shrink it.
            if(totaldays<=days)  
            {
                high=mid-1;
            }
            else{
            low=mid+1;
            }
        }
        return low;
        
    }
};