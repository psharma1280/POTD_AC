class Solution {
public:
    int findPeakElement(vector<int>& nums) {
        
        int n=nums.size();
        // array of size 1:-
        if(n==1)
        return 0;
        if(nums[0]>nums[1])
        return 0;
        if(nums[n-1]>nums[n-2])
        return n-1;
        // applying binary search:-
        int low=1;
        int high=n-2;
        
        while(low<=high)
        {
            int mid=(low+high)/2;

            // checking if mid is peak:-
            if(nums[mid]>nums[mid-1] && nums[mid]>nums[mid+1]) 
            {
                return mid;

            }
            // peak will be on right side
           else if(nums[mid]>nums[mid-1])
            {
                low=mid+1;
            }

            // peak will be on left side:-
            else 
            {
                high=mid-1;
            }

        }
        return -1;
    }
};